{"version":3,"file":"reservation-24e75460.js","sources":["../../../.svelte-kit/adapter-node/chunks/reservation.js"],"sourcesContent":["import { R as ReservationCategory, O as OWTime, b as ReservationType, a as ReservationStatus } from \"./settings.js\";\nimport { t as timeStrToMin, i as isValidProSafetyCutoff } from \"./datetimeUtils.js\";\nimport { g as getXataClient } from \"./xata-old.js\";\nimport { g as getStartEndTimes, c as beforeResCutoff, b as beforeCancelCutoff, d as getNumberOfOccupants } from \"./reservations.js\";\nimport { i as initSettings } from \"./settings2.js\";\nimport { a as getDateSetting } from \"./firestore.js\";\nimport { c as getUsersById } from \"./user.js\";\nimport { a as assignRsvsToBuoys } from \"./assignRsvsToBuoys.js\";\nimport _ from \"lodash\";\nimport dayjs from \"dayjs\";\nimport ObjectsToCsv from \"objects-to-csv\";\nfunction getTimeSlots({\n  settings,\n  date,\n  category,\n  start,\n  end\n}) {\n  let times = getStartEndTimes(settings, date, category);\n  let sIdx = times.indexOf(start);\n  let eIdx = times.indexOf(end);\n  if (sIdx == -1 && eIdx == -1) {\n    return null;\n  }\n  if (sIdx == -1) {\n    sIdx = 0;\n  }\n  if (eIdx == -1) {\n    eIdx = times.length - 1;\n  }\n  let beforeStart = times.slice(0, sIdx);\n  let startVals = times.slice(sIdx, eIdx);\n  let endVals = times.slice(sIdx + 1, eIdx + 1);\n  let afterEnd = times.slice(eIdx + 1);\n  return { startVals, endVals, beforeStart, afterEnd };\n}\nfunction isTimeOverlapping({\n  startA,\n  endA,\n  startB,\n  endB\n}) {\n  const startAMin = timeStrToMin(startA);\n  const startBMin = timeStrToMin(startB);\n  const endAMin = timeStrToMin(endA);\n  const endBMin = timeStrToMin(endB);\n  return startAMin >= startBMin && startAMin < endBMin || endAMin <= endBMin && endAMin > startBMin || startAMin < startBMin && endAMin > endBMin;\n}\nfunction getTimeOverlapFilters(settings, rsv) {\n  let owAmStart = settings.getOpenwaterAmStartTime(rsv.date);\n  let owAmEnd = settings.getOpenwaterAmEndTime(rsv.date);\n  let owPmStart = settings.getOpenwaterPmStartTime(rsv.date);\n  let owPmEnd = settings.getOpenwaterPmEndTime(rsv.date);\n  let start, end;\n  let owTimes = [];\n  if ([ReservationCategory.pool, ReservationCategory.classroom].includes(rsv.category)) {\n    start = rsv.startTime;\n    end = rsv.endTime;\n    if (isTimeOverlapping({\n      startA: start,\n      endA: end,\n      startB: owAmStart,\n      endB: owAmEnd\n    })) {\n      owTimes.push(OWTime.AM);\n    }\n    if (isTimeOverlapping({\n      startA: start,\n      endA: end,\n      startB: owPmStart,\n      endB: owPmEnd\n    })) {\n      owTimes.push(OWTime.PM);\n    }\n  } else if (rsv.category === ReservationCategory.openwater) {\n    owTimes.push(rsv.owTime);\n    if (rsv.owTime === OWTime.AM) {\n      start = owAmStart;\n      end = owAmEnd;\n    } else if (rsv.owTime === OWTime.PM) {\n      start = owPmStart;\n      end = owPmEnd;\n    } else {\n      throw new Error(\"invalid OWTime: \" + rsv.owTime);\n    }\n  } else {\n    throw new Error(\"invalid reservation category: \" + rsv.category);\n  }\n  const filters = [];\n  if (owTimes.length > 0) {\n    filters.push({\n      category: ReservationCategory.openwater,\n      owTime: { $any: owTimes }\n    });\n  }\n  for (let cat of [ReservationCategory.pool, ReservationCategory.classroom]) {\n    let slots = getTimeSlots({\n      settings,\n      date: rsv.date,\n      category: cat,\n      start,\n      end\n    });\n    if (slots != null) {\n      let timeFilt = [];\n      if (slots.startVals.length > 0) {\n        timeFilt.push({ startTime: { $any: slots.startVals } });\n      }\n      if (slots.endVals.length > 0) {\n        timeFilt.push({ endTime: { $any: slots.endVals } });\n      }\n      if (slots.beforeStart.length > 0 && slots.afterEnd.length > 0) {\n        timeFilt.push({\n          $all: [{ startTime: { $any: slots.beforeStart } }, { endTime: { $any: slots.afterEnd } }]\n        });\n      }\n      if (timeFilt.length > 0) {\n        filters.push({\n          category: cat,\n          $any: timeFilt\n        });\n      }\n    }\n  }\n  return filters;\n}\nclass ValidationError extends Error {\n}\nconst client$1 = getXataClient();\nfunction getStartTime(settings, sub) {\n  if (sub.category === ReservationCategory.openwater) {\n    if (sub.owTime === OWTime.AM) {\n      return settings.getOpenwaterAmStartTime(sub.date);\n    } else if (sub.owTime === OWTime.PM) {\n      return settings.getOpenwaterPmStartTime(sub.date);\n    } else {\n      throw new Error(\"unknown owTime value: \" + sub.owTime);\n    }\n  } else {\n    return sub.startTime;\n  }\n}\nconst reducingStudents = (orig, sub) => orig.resType === ReservationType.course && orig.numStudents > sub.numStudents;\nconst removingBuddy = (orig, sub) => orig.resType === ReservationType.autonomous && orig.buddies.length > sub.buddies.length && sub.buddies.reduce((val, id) => orig.buddies.includes(id) && val, true);\nconst changingCourseToAutonomous = (orig, sub) => orig.resType == ReservationType.course && sub.resType == ReservationType.autonomous && sub.buddies.length == 0;\nfunction throwIfPastUpdateTime(settings, orig, sub) {\n  let startTime = getStartTime(settings, sub);\n  if (!beforeResCutoff(settings, sub.date, startTime, sub.category)) {\n    const cutoffError = \"The modification window for this reservation date/time has expired; this reservation can no longer be modified\";\n    if (!reducingStudents(orig, sub) && !removingBuddy(orig, sub) && !changingCourseToAutonomous(orig, sub)) {\n      throw new ValidationError(cutoffError);\n    } else if (!beforeCancelCutoff(settings, sub.date, startTime, sub.category)) {\n      throw new ValidationError(cutoffError);\n    }\n  }\n}\nfunction isMyBuddysReservation(rsv, sub) {\n  if (sub.buddies && sub.buddies.includes(rsv.user.id)) {\n    if ([ReservationCategory.pool, ReservationCategory.classroom].includes(sub.category)) {\n      return rsv.category === sub.category && rsv.startTime === sub.startTime && rsv.endTime === sub.endTime;\n    } else if (sub.category === ReservationCategory.openwater) {\n      return rsv.category === sub.category && rsv.owTime === sub.owTime;\n    } else {\n      throw new Error(\"invalid category: \" + sub.category);\n    }\n  } else {\n    return false;\n  }\n}\nfunction throwIfOverlappingReservation(sub, allOverlappingRsvs, userIds) {\n  let userOverlapping = allOverlappingRsvs.filter((rsv) => userIds.includes(rsv.user.id));\n  for (let rsv of userOverlapping) {\n    let notThisRsv = rsv.id !== sub.id;\n    let notBuddyOfThisRsv = !isMyBuddysReservation(rsv, sub);\n    if (notThisRsv && notBuddyOfThisRsv) {\n      throw new ValidationError(\n        \"You or one of your buddies has a pre-existing reservation at this time\"\n      );\n    }\n  }\n}\nfunction checkOWSpaceAvailable(buoys, sub, existingReservations) {\n  let buddyGroup = simulateBuddyGroup(sub);\n  let { unassigned } = assignRsvsToBuoys(buoys, [...buddyGroup, ...existingReservations]);\n  if (unassigned.length > 0) {\n    return {\n      status: \"error\",\n      message: \"All buoys are fully booked at this time.  Please either check back later or try a different date/time\"\n    };\n  } else {\n    return { status: \"success\" };\n  }\n}\nfunction checkPoolSpaceAvailable(settings, sub, overlapping) {\n  let startEndTs = getStartEndTimes(settings, sub.date, sub.category);\n  for (let i = startEndTs.indexOf(sub.startTime); i < startEndTs.indexOf(sub.endTime); i++) {\n    let time = timeStrToMin(startEndTs[i]);\n    let thisSlotOverlap = overlapping.filter((rsv) => {\n      let start = timeStrToMin(rsv.startTime);\n      let end = timeStrToMin(rsv.endTime);\n      return start <= time && end > time;\n    });\n    let numDivers = getNumberOfOccupants([...thisSlotOverlap, sub]) + sub.buddies.length;\n    let nLanes = settings.getPoolLanes(sub.date).length;\n    if (numDivers > nLanes) {\n      return {\n        status: \"error\",\n        message: \"All pool lanes are booked at this time.  Please either check back later or try a different date/time\"\n      };\n    }\n  }\n  return { status: \"success\" };\n}\nconst checkClassroomAvailable = (settings, sub, overlapping) => {\n  if (overlapping.length >= settings.getClassrooms(sub.date).length) {\n    return {\n      status: \"error\",\n      message: \"All classrooms are booked at this time.  Please either check back later or try a different date/time\"\n    };\n  } else {\n    return { status: \"success\" };\n  }\n};\nfunction simulateBuddyGroup(sub) {\n  let simId = -1;\n  let owner = {\n    ...sub,\n    id: (simId--).toString(),\n    buoy: sub.resType === ReservationType.cbs ? \"CBS\" : \"auto\"\n  };\n  let simBuds = [];\n  for (let id of owner.buddies) {\n    let buddies = [owner.user.id, ...owner.buddies.filter((thisId) => thisId != id)];\n    simBuds.push({\n      ...owner,\n      id: simId--,\n      user: { id },\n      buddies\n    });\n  }\n  return [owner, ...simBuds];\n}\nconst throwIfUserIsDisabled = async (userIds) => {\n  const users = await getUsersById(userIds);\n  users.map((user) => {\n    if (user == null)\n      throw new Error(\"invalid user Id\");\n    if (user.status === \"disabled\") {\n      throw new ValidationError(\n        `Please contact the admin to activate the account for ${user.nickname}`\n      );\n    }\n  });\n};\nasync function throwIfNoSpaceAvailable(settings, sub, allOverlappingRsvs, ignore = []) {\n  let result;\n  let catOverlapping = allOverlappingRsvs.filter((rsv) => rsv.category === sub.category && !ignore.includes(rsv.id)).map((rsv) => {\n    return { ...rsv };\n  });\n  if (sub.category === ReservationCategory.openwater) {\n    let buoys = await client$1.db.Buoys.getAll();\n    result = checkOWSpaceAvailable(buoys, sub, catOverlapping);\n  } else if (sub.category === ReservationCategory.pool) {\n    result = checkPoolSpaceAvailable(settings, sub, catOverlapping);\n  } else if (sub.category === ReservationCategory.classroom) {\n    result = checkClassroomAvailable(settings, sub, catOverlapping);\n  } else {\n    throw new Error(`invalid category ${sub.category}`);\n  }\n  if (result.status === \"error\") {\n    throw new ValidationError(result.message);\n  }\n}\nconst client = getXataClient();\nasync function getReservationsCsv(branch) {\n  const client2 = getXataClient(branch);\n  const fields = [\n    \"user.name\",\n    \"user.nickname\",\n    \"date\",\n    \"category\",\n    \"price\",\n    \"status\",\n    \"resType\",\n    \"numStudents\",\n    \"owTime\",\n    \"startTime\",\n    \"endTime\"\n  ];\n  let dateStr = dayjs().month(dayjs().month() - 1).startOf(\"month\").locale(\"en-US\").format(\"YYYY-MM-DD\");\n  let records = await client2.db.Reservations.select([\"*\", \"user.*\"]).filter({\n    //@ts-ignore\n    date: { $ge: dateStr }\n  }).select(fields).getAll();\n  records = records.map((rsv) => {\n    let numStudents = rsv.numStudents;\n    if (rsv.resType == ReservationType.autonomous) {\n      numStudents = 1;\n    }\n    let owTime = rsv.owTime;\n    if (rsv.category != ReservationCategory.openwater) {\n      if (timeStrToMin(rsv.startTime) < 720) {\n        owTime = OWTime.AM;\n      } else {\n        owTime = OWTime.PM;\n      }\n    }\n    return { ...rsv, owTime, numStudents };\n  });\n  const csv = new ObjectsToCsv(\n    records.map((ent) => {\n      return {\n        ..._.omit(ent, [\"user\"]),\n        name: _.get(ent, \"user.name\", \"no name\"),\n        nickname: _.get(ent, \"user.nickname\", \"no name\")\n      };\n    })\n  );\n  return await csv.toString();\n}\nconst throwIfNull = (rsv, field) => {\n  if (rsv[field] == null) {\n    throw new Error(`invalid null value for ${field} in reservation ${rsv.id}`);\n  }\n};\nfunction throwIfReservationIsInvalid(rsv) {\n  if (rsv == null)\n    throw new Error(\"null reservation\");\n  if (!Object.keys(ReservationCategory).includes(rsv.category)) {\n    throw new Error(`invalid reservation category \"${rsv.category}\" for ${rsv.id}`);\n  } else {\n    if (rsv.category == ReservationCategory.openwater) {\n      if (!Object.keys(OWTime).includes(rsv.owTime)) {\n        throw new Error(`invalid owTime \"${rsv.owTime}\" for ${rsv.id}`);\n      }\n      throwIfNull(rsv, \"maxDepth\");\n      throwIfNull(rsv, \"buoy\");\n    } else {\n      throwIfNull(rsv, \"startTime\");\n      throwIfNull(rsv, \"endTime\");\n    }\n  }\n  if (!Object.keys(ReservationType).includes(rsv.resType)) {\n    throw new Error(`invalid reservation type \"${rsv.resType}\" for ${rsv.id}`);\n  } else {\n    if (rsv.resType == ReservationType.course) {\n      throwIfNull(rsv, \"numStudents\");\n    }\n  }\n  if (!Object.keys(ReservationStatus).includes(rsv.status)) {\n    throw new Error(`invalid reservation status \"${rsv.status}\" for ${rsv.id}`);\n  }\n  throwIfNull(rsv, \"user\");\n  return rsv;\n}\nconst getAugmentedRsv = (settings, rsv) => {\n  let buddies = rsv.buddies;\n  let startTime = rsv.startTime;\n  let endTime = rsv.endTime;\n  if (buddies == null) {\n    buddies = [];\n  }\n  if (rsv.category === ReservationCategory.openwater) {\n    if (rsv.owTime === OWTime.AM) {\n      startTime = settings.getOpenwaterAmStartTime(rsv.date);\n      endTime = settings.getOpenwaterAmEndTime(rsv.date);\n    } else if (rsv.owTime === OWTime.PM) {\n      startTime = settings.getOpenwaterPmStartTime(rsv.date);\n      endTime = settings.getOpenwaterPmEndTime(rsv.date);\n    }\n  }\n  return {\n    ...rsv,\n    buddies,\n    startTime,\n    endTime\n  };\n};\nasync function convertFromXataToAppType(rawRsvs) {\n  const settings = await initSettings();\n  let reservations = rawRsvs.map((rsv) => throwIfReservationIsInvalid(rsv));\n  return reservations.map((rsv) => {\n    return getAugmentedRsv(settings, rsv);\n  });\n}\nfunction categoryIsBookable(settings, sub) {\n  let isBookable = false;\n  switch (sub.category) {\n    case ReservationCategory.pool:\n      isBookable = settings.getPoolBookable(sub.date);\n      break;\n    case ReservationCategory.openwater:\n      if (sub.owTime == OWTime.AM) {\n        isBookable = settings.getOpenwaterAmBookable(sub.date);\n      } else {\n        isBookable = settings.getOpenwaterPmBookable(sub.date);\n      }\n      break;\n    case ReservationCategory.classroom:\n      isBookable = settings.getClassroomBookable(sub.date);\n      break;\n  }\n  return isBookable;\n}\nasync function getOverlappingReservations(sub) {\n  const settings = await initSettings();\n  const filters = {\n    date: sub.date,\n    $any: getTimeOverlapFilters(settings, sub),\n    status: { $any: [ReservationStatus.pending, ReservationStatus.confirmed] }\n  };\n  const overlapping = await client.db.Reservations.filter(filters).getAll();\n  return await convertFromXataToAppType(overlapping);\n}\nasync function getUserOverlappingReservations(sub, userIds) {\n  let overlapping = await getOverlappingReservations(sub);\n  return overlapping.filter((rsv) => userIds.includes(rsv.user.id));\n}\nasync function throwIfSubmissionIsInvalid(sub) {\n  const settings = await initSettings();\n  if (!settings.getOpenForBusiness(sub.date)) {\n    throw new ValidationError(\"We are closed on this date; please choose a different date\");\n  }\n  if (!categoryIsBookable(settings, sub)) {\n    throw new ValidationError(\n      `The ${sub.category} is not bookable on this date; please choose a different date`\n    );\n  }\n  let userIds = [sub.user.id, ...sub.buddies];\n  await throwIfUserIsDisabled(userIds);\n  if (sub.resType === \"proSafety\") {\n    const isValid = isValidProSafetyCutoff(sub.date);\n    if (!isValid)\n      throw new ValidationError(\"PRO_SAFETY reservation should be done before 4PM.\");\n  }\n  if (!beforeResCutoff(settings, sub.date, getStartTime(settings, sub), sub.category)) {\n    throw new ValidationError(\n      \"The submission window for this reservation date/time has expired. Please choose a later date.\"\n    );\n  }\n  let allOverlappingRsvs = await getOverlappingReservations(sub);\n  let userOverlappingRsvs = allOverlappingRsvs.filter((rsv) => userIds.includes(rsv.user.id));\n  if (userOverlappingRsvs.length > 0) {\n    throw new ValidationError(\n      \"You or one of your buddies has a pre-existing reservation at this time\"\n    );\n  }\n  const day = dayjs(sub.date).day();\n  const tuesday = 2;\n  const friday = 5;\n  const competitionSetupDays = [tuesday, friday];\n  if ([ReservationType.autonomousPlatformCBS, ReservationType.autonomousPlatform].includes(\n    sub.resType\n  )) {\n    if (sub.buddies?.length < 2) {\n      throw new ValidationError(`Booking this training type requires a minimum of 2 buddies.`);\n    }\n  }\n  if (ReservationType.competitionSetupCBS === sub.resType && !competitionSetupDays.includes(day)) {\n    throw new ValidationError(\n      \"Competition setup training is available only during Tuesdays and Fridays\"\n    );\n  }\n  await throwIfNoSpaceAvailable(settings, sub, allOverlappingRsvs);\n}\nfunction createBuddyEntriesForSubmit(sub) {\n  let entries = [sub];\n  if (sub.buddies.length > 0) {\n    let { user, buddies, ...common } = sub;\n    for (let id of buddies) {\n      let bg = [user.id, ...buddies.filter((bid) => bid != id)];\n      entries.push({ ...common, user: { id }, buddies: bg, owner: false });\n    }\n  }\n  return entries;\n}\nconst buoyCBS = \"CBS\";\nconst onCBSBuoy = [\n  ReservationType.cbs,\n  ReservationType.competitionSetupCBS,\n  ReservationType.autonomousPlatformCBS\n];\nconst getBuoy = (resType) => onCBSBuoy.includes(resType) ? buoyCBS : \"auto\";\nfunction unpackSubmitForm(formData) {\n  const category = ReservationCategory[formData.get(\"category\")];\n  const status = category == ReservationCategory.openwater ? ReservationStatus.pending : ReservationStatus.confirmed;\n  const resType = ReservationType[formData.get(\"resType\")];\n  const buoy = getBuoy(resType);\n  return {\n    user: JSON.parse(formData.get(\"user\")),\n    date: formData.get(\"date\"),\n    category,\n    resType,\n    buddies: JSON.parse(formData.get(\"buddies\")),\n    comments: formData.get(\"comments\"),\n    numStudents: JSON.parse(formData.get(\"numStudents\")),\n    startTime: formData.get(\"startTime\"),\n    endTime: formData.get(\"endTime\"),\n    owTime: OWTime[formData.get(\"owTime\")],\n    maxDepth: JSON.parse(formData.get(\"maxDepth\")),\n    pulley: formData.has(\"pulley\") ? formData.get(\"pulley\") == \"on\" : null,\n    extraBottomWeight: formData.get(\"extraBottomWeight\") == \"on\",\n    bottomPlate: formData.get(\"bottomPlate\") == \"on\",\n    largeBuoy: formData.get(\"largeBuoy\") == \"on\",\n    O2OnBuoy: formData.get(\"O2OnBuoy\") == \"on\",\n    shortSession: formData.get(\"shortSession\") == \"on\",\n    owner: true,\n    status,\n    buoy,\n    lanes: [\"auto\"],\n    allowAutoAdjust: [\"on\", \"true\"].includes(formData.get(\"allowAutoAdjust\"))\n  };\n}\nasync function submitReservation(formData) {\n  const sub = unpackSubmitForm(formData);\n  await throwIfSubmissionIsInvalid(sub);\n  let entries = createBuddyEntriesForSubmit(sub);\n  const createdReservations = await client.db.Reservations.create(entries);\n  let records = await convertFromXataToAppType(createdReservations);\n  return { records };\n}\nasync function throwIfUpdateIsInvalid(sub, orig, ignore, isAMFull) {\n  const settings = await initSettings();\n  if (!settings.getOpenForBusiness(sub.date)) {\n    throw new ValidationError(\"We are closed on this date; please choose a different date\");\n  }\n  if (!categoryIsBookable(settings, sub)) {\n    throw new ValidationError(\n      `The ${sub.category} is not bookable on this date; please choose a different date`\n    );\n  }\n  throwIfPastUpdateTime(settings, orig, sub);\n  let allOverlappingRsvs = await getOverlappingReservations(sub);\n  let userIds = [sub.user.id, ...sub.buddies];\n  throwIfOverlappingReservation(orig, allOverlappingRsvs, userIds);\n  if (sub.resType === ReservationType.course && sub.category === ReservationCategory.openwater) {\n    if (isAMFull && sub.numStudents > orig.numStudents && sub.owTime === OWTime.AM) {\n      throw new ValidationError(\"The morning open water session is full for this date cannot increase the number of students.\");\n    }\n  }\n  await throwIfNoSpaceAvailable(settings, sub, allOverlappingRsvs, ignore);\n}\nasync function createBuddyEntriesForUpdate(sub, orig) {\n  let buddySet = /* @__PURE__ */ new Set([...sub.buddies, ...orig.buddies]);\n  let modify = [sub];\n  let create = [];\n  let cancel = [];\n  if (buddySet.size > 0) {\n    let rsvIdByUserId = {};\n    let { id, user, buddies, ...common } = sub;\n    delete common.createdAt;\n    if (orig.buddies.length > 0) {\n      let buddyRsvs = await getUserOverlappingReservations(orig, orig.buddies);\n      rsvIdByUserId = buddyRsvs.reduce((obj, rsv) => {\n        obj[rsv.user.id] = rsv.id;\n        return obj;\n      }, {});\n    }\n    const getBuddyField = (myId) => [\n      user.id,\n      ...buddies.filter((bId) => bId != myId)\n    ];\n    for (let bId of buddySet) {\n      if (buddies.includes(bId) && orig.buddies.includes(bId)) {\n        let entry = {\n          ...common,\n          id: rsvIdByUserId[bId],\n          user: { id: bId },\n          buddies: getBuddyField(bId),\n          owner: false\n        };\n        modify.push(entry);\n      } else if (buddies.includes(bId)) {\n        let entry = {\n          ...common,\n          createdAt: common.updatedAt,\n          user: { id: bId },\n          buddies: getBuddyField(bId),\n          owner: false\n        };\n        create.push(entry);\n      } else {\n        cancel.push(rsvIdByUserId[bId]);\n      }\n    }\n  }\n  return { modify, create, cancel };\n}\nasync function unpackModifyForm(formData, orig) {\n  const status = orig.category == ReservationCategory.openwater ? ReservationStatus.pending : ReservationStatus.confirmed;\n  const settings = await initSettings();\n  const brc = beforeResCutoff(settings, orig.date, getStartTime(settings, orig), orig.category);\n  const resType = formData.has(\"resType\") ? ReservationType[formData.get(\"resType\")] : orig.resType;\n  const buoy = getBuoy(resType);\n  return {\n    id: formData.get(\"id\"),\n    date: formData.get(\"date\"),\n    category: orig.category,\n    //can't be changed\n    startTime: formData.has(\"startTime\") ? formData.get(\"startTime\") : orig.startTime,\n    endTime: formData.has(\"endTime\") ? formData.get(\"endTime\") : orig.endTime,\n    owTime: formData.has(\"owTime\") ? OWTime[formData.get(\"owTime\")] : orig.owTime,\n    resType,\n    numStudents: formData.has(\"numStudents\") ? JSON.parse(formData.get(\"numStudents\")) : orig.numStudents,\n    maxDepth: formData.has(\"maxDepth\") ? JSON.parse(formData.get(\"maxDepth\")) : orig.maxDepth,\n    comments: formData.has(\"comments\") ? formData.get(\"comments\") : orig.comments,\n    user: orig.user,\n    //can't change\n    buddies: JSON.parse(formData.get(\"buddies\")),\n    //buddy updates are dealt with later\n    pulley: formData.has(\"pulley\") ? formData.get(\"pulley\") == \"on\" : null,\n    extraBottomWeight: formData.get(\"extraBottomWeight\") == \"on\",\n    bottomPlate: formData.get(\"bottomPlate\") == \"on\",\n    largeBuoy: formData.get(\"largeBuoy\") == \"on\",\n    O2OnBuoy: formData.get(\"O2OnBuoy\") == \"on\",\n    shortSession: formData.get(\"shortSession\") == \"on\",\n    createdAt: orig.createdAt,\n    owner: true,\n    status,\n    lanes: brc ? [\"auto\"] : orig.lanes,\n    buoy,\n    room: brc ? \"auto\" : orig.room,\n    price: orig.price,\n    updatedAt: /* @__PURE__ */ new Date(),\n    allowAutoAdjust: [\"on\", \"true\"].includes(formData.get(\"allowAutoAdjust\"))\n  };\n}\nasync function modifyReservation(formData) {\n  let id = formData.get(\"id\");\n  let [orig] = await convertFromXataToAppType([await client.db.Reservations.read(id)]);\n  let sub = await unpackModifyForm(formData, orig);\n  const settingDate = await getDateSetting(sub.date);\n  let { create, modify, cancel } = await createBuddyEntriesForUpdate(sub, orig);\n  if (settingDate?.ow_am_full && sub.owTime === OWTime.AM) {\n    if (create.length > 0) {\n      throw new ValidationError(\"The morning open water session is full for this date cannot add a buddy.\");\n    } else if (modify.length > 0 && (sub.date !== orig.date || orig.owTime !== sub.owTime)) {\n      throw new ValidationError(\"The morning open water session is full for this date cannot change to that date or time.\");\n    }\n  }\n  let existing = [...modify.map((rsv) => rsv.id), ...cancel];\n  await throwIfUpdateIsInvalid(sub, orig, existing, settingDate?.ow_am_full ?? false);\n  let records = {\n    created: [],\n    canceled: []\n  };\n  if (orig.buoy !== \"auto\") {\n    modify[0].buoy = orig.buoy;\n  }\n  if (sub.resType === ReservationType.course && orig.numStudents !== sub.numStudents) {\n    modify[0].status = ReservationStatus.pending;\n    if (ReservationCategory.openwater !== sub.category) {\n      modify[0].status = orig.status;\n    }\n  }\n  let modrecs = await client.db.Reservations.update(modify);\n  records.modified = await convertFromXataToAppType(modrecs);\n  if (create.length > 0) {\n    let createrecs = await client.db.Reservations.create(create);\n    records.created = await convertFromXataToAppType(createrecs);\n  }\n  if (cancel.length > 0) {\n    let cancelrecs = await client.db.Reservations.update(\n      cancel.map((id2) => {\n        return { id: id2, status: ReservationStatus.canceled };\n      })\n    );\n    records.canceled = await convertFromXataToAppType(cancelrecs);\n  }\n  return { records };\n}\nasync function adminUpdate(formData) {\n  let rsv = {};\n  let id = formData.get(\"id\");\n  let existing = await client.db.Reservations.read(id);\n  if (existing.status != ReservationStatus.canceled) {\n    rsv.status = formData.get(\"status\");\n  }\n  const cat = formData.get(\"category\");\n  if (cat === \"pool\") {\n    rsv.lanes = [formData.get(\"lane\")];\n  } else if (cat === \"openwater\") {\n    rsv.buoy = formData.get(\"buoy\");\n  } else if (cat === \"classroom\") {\n    rsv.room = formData.get(\"room\");\n  }\n  let record = await client.db.Reservations.update(id, rsv);\n  return record;\n}\nasync function throwIfInvalidCancellation(data) {\n  const settings = await initSettings();\n  if (!beforeCancelCutoff(settings, data.date, data.startTime, data.category)) {\n    throw new ValidationError(\n      \"The cancellation window for this reservation has expired; this reservation can no longer be canceled\"\n    );\n  }\n}\nasync function cancelReservation(formData) {\n  let id = formData.get(\"id\");\n  let buddiesToCancel = JSON.parse(formData.get(\"cancelBuddies\"));\n  let [sub] = await convertFromXataToAppType([await client.db.Reservations.read(id)]);\n  await throwIfInvalidCancellation(sub);\n  let save = sub.buddies.filter((id2) => !buddiesToCancel.includes(id2));\n  let cancel = [sub.id];\n  let records = {\n    modified: []\n  };\n  if (sub.buddies.length > 0) {\n    let existing = await getUserOverlappingReservations(sub, sub.buddies);\n    let modify = existing.filter((rsv) => save.includes(rsv.user.id)).map((rsv) => {\n      let buddies = save.filter((id2) => id2 != rsv.user.id);\n      return { ...rsv, buddies };\n    });\n    if (modify.length > 0) {\n      if (modify.reduce((b, rsv) => b || rsv.owner, false) == false) {\n        modify[0].owner = true;\n      }\n      let modrecs = await client.db.Reservations.update(modify);\n      records.modified = await convertFromXataToAppType(modrecs);\n    }\n    cancel = cancel.concat(\n      existing.filter((rsv) => !save.includes(rsv.user.id)).map((rsv) => rsv.id)\n    );\n  }\n  let cancelrecs = await client.db.Reservations.update(\n    cancel.map((id2) => {\n      return { id: id2, status: \"canceled\" };\n    })\n  );\n  records.canceled = await convertFromXataToAppType(cancelrecs);\n  return { records };\n}\nasync function approveAllPendingReservations(category, date) {\n  const filters = {\n    date,\n    category,\n    status: ReservationStatus.pending\n  };\n  console.info(\"Approving all pending reservations for\", category, date);\n  const pending = await client.db.Reservations.filter(filters).getAll();\n  const approved = pending.map((rsv) => {\n    return {\n      ...rsv,\n      status: ReservationStatus.confirmed\n    };\n  });\n  await client.db.Reservations.update(approved);\n}\nexport {\n  ValidationError as V,\n  approveAllPendingReservations as a,\n  cancelReservation as b,\n  convertFromXataToAppType as c,\n  adminUpdate as d,\n  getReservationsCsv as g,\n  modifyReservation as m,\n  submitReservation as s\n};\n"],"names":[],"mappings":"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"}